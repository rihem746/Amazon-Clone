{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ActionTypes } from './useListbox.types';\nconst pageSize = 5;\n\nfunction findValidOptionToHighlight(index, lookupDirection, options, focusDisabled, isOptionDisabled, wrapAround) {\n  if (options.length === 0 || options.every((o, i) => isOptionDisabled(o, i))) {\n    return -1;\n  }\n\n  let nextFocus = index;\n\n  for (;;) {\n    // No valid options found\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === options.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\n      return -1;\n    }\n\n    const nextFocusDisabled = focusDisabled ? false : isOptionDisabled(options[nextFocus], nextFocus);\n\n    if (nextFocusDisabled) {\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\n\n      if (wrapAround) {\n        nextFocus = (nextFocus + options.length) % options.length;\n      }\n    } else {\n      return nextFocus;\n    }\n  }\n}\n\nfunction getNewHighlightedOption(options, previouslyHighlightedOption, diff, lookupDirection, highlightDisabled, isOptionDisabled, wrapAround, optionComparer) {\n  var _options$nextIndex;\n\n  const maxIndex = options.length - 1;\n  const defaultHighlightedIndex = -1;\n  let nextIndexCandidate;\n  const previouslyHighlightedIndex = previouslyHighlightedOption == null ? -1 : options.findIndex(option => optionComparer(option, previouslyHighlightedOption));\n\n  if (diff === 'reset') {\n    var _options$defaultHighl;\n\n    return defaultHighlightedIndex === -1 ? null : (_options$defaultHighl = options[defaultHighlightedIndex]) != null ? _options$defaultHighl : null;\n  }\n\n  if (diff === 'start') {\n    nextIndexCandidate = 0;\n  } else if (diff === 'end') {\n    nextIndexCandidate = maxIndex;\n  } else {\n    const newIndex = previouslyHighlightedIndex + diff;\n\n    if (newIndex < 0) {\n      if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(diff) > 1) {\n        nextIndexCandidate = 0;\n      } else {\n        nextIndexCandidate = maxIndex;\n      }\n    } else if (newIndex > maxIndex) {\n      if (!wrapAround || Math.abs(diff) > 1) {\n        nextIndexCandidate = maxIndex;\n      } else {\n        nextIndexCandidate = 0;\n      }\n    } else {\n      nextIndexCandidate = newIndex;\n    }\n  }\n\n  const nextIndex = findValidOptionToHighlight(nextIndexCandidate, lookupDirection, options, highlightDisabled, isOptionDisabled, wrapAround);\n  return (_options$nextIndex = options[nextIndex]) != null ? _options$nextIndex : null;\n}\n\nfunction handleOptionSelection(option, state, props) {\n  const {\n    multiple,\n    optionComparer = (o, v) => o === v,\n    isOptionDisabled = () => false\n  } = props;\n  const {\n    selectedValue\n  } = state;\n  const optionIndex = props.options.indexOf(option);\n\n  if (isOptionDisabled(option, optionIndex)) {\n    return state;\n  }\n\n  if (multiple) {\n    var _ref, _ref2;\n\n    const selectedValues = (_ref = selectedValue) != null ? _ref : []; // if the option is already selected, remove it from the selection, otherwise add it\n\n    const newSelectedValues = selectedValues.some(sv => optionComparer(sv, option)) ? selectedValue.filter(v => !optionComparer(v, option)) : [...((_ref2 = selectedValue) != null ? _ref2 : []), option];\n    return {\n      selectedValue: newSelectedValues,\n      highlightedValue: option\n    };\n  }\n\n  if (selectedValue != null && optionComparer(option, selectedValue)) {\n    return state;\n  }\n\n  return {\n    selectedValue: option,\n    highlightedValue: option\n  };\n}\n\nfunction handleKeyDown(event, state, props) {\n  const {\n    options,\n    isOptionDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    optionComparer\n  } = props;\n\n  const moveHighlight = (diff, direction, wrapAround) => {\n    return getNewHighlightedOption(options, state.highlightedValue, diff, direction, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, wrapAround, optionComparer);\n  };\n\n  switch (event.key) {\n    case 'Home':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight('start', 'next', false)\n      });\n\n    case 'End':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight('end', 'previous', false)\n      });\n\n    case 'PageUp':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(-pageSize, 'previous', false)\n      });\n\n    case 'PageDown':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(pageSize, 'next', false)\n      });\n\n    case 'ArrowUp':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(-1, 'previous', !(disableListWrap != null ? disableListWrap : false))\n      });\n\n    case 'ArrowDown':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(1, 'next', !(disableListWrap != null ? disableListWrap : false))\n      });\n\n    case 'Enter':\n    case ' ':\n      if (state.highlightedValue === null) {\n        return state;\n      }\n\n      return handleOptionSelection(state.highlightedValue, state, props);\n\n    default:\n      break;\n  }\n\n  return state;\n}\n\nfunction handleBlur(state) {\n  return _extends({}, state, {\n    highlightedValue: null\n  });\n}\n\nfunction handleOptionsChange(options, previousOptions, state, props) {\n  var _options$find, _options$find2;\n\n  const {\n    multiple,\n    optionComparer\n  } = props;\n  const newHighlightedOption = state.highlightedValue == null ? null : (_options$find = options.find(option => optionComparer(option, state.highlightedValue))) != null ? _options$find : null;\n\n  if (multiple) {\n    var _ref3; // exclude selected values that are no longer in the options\n\n\n    const selectedValues = (_ref3 = state.selectedValue) != null ? _ref3 : [];\n    const newSelectedValues = selectedValues.filter(selectedValue => options.some(option => optionComparer(option, selectedValue)));\n    return {\n      highlightedValue: newHighlightedOption,\n      selectedValue: newSelectedValues\n    };\n  }\n\n  const newSelectedValue = (_options$find2 = options.find(option => optionComparer(option, state.selectedValue))) != null ? _options$find2 : null;\n  return {\n    highlightedValue: newHighlightedOption,\n    selectedValue: newSelectedValue\n  };\n}\n\nexport default function defaultListboxReducer(state, action) {\n  const {\n    type\n  } = action;\n\n  switch (type) {\n    case ActionTypes.keyDown:\n      return handleKeyDown(action.event, state, action.props);\n\n    case ActionTypes.optionClick:\n      return handleOptionSelection(action.option, state, action.props);\n\n    case ActionTypes.blur:\n      return handleBlur(state);\n\n    case ActionTypes.setValue:\n      return _extends({}, state, {\n        selectedValue: action.value\n      });\n\n    case ActionTypes.setHighlight:\n      return _extends({}, state, {\n        highlightedValue: action.highlight\n      });\n\n    case ActionTypes.optionsChange:\n      return handleOptionsChange(action.options, action.previousOptions, state, action.props);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/rihem/Bureau/amazon-clone/node_modules/@mui/base/ListboxUnstyled/defaultListboxReducer.js"],"names":["_extends","ActionTypes","pageSize","findValidOptionToHighlight","index","lookupDirection","options","focusDisabled","isOptionDisabled","wrapAround","length","every","o","i","nextFocus","nextFocusDisabled","getNewHighlightedOption","previouslyHighlightedOption","diff","highlightDisabled","optionComparer","_options$nextIndex","maxIndex","defaultHighlightedIndex","nextIndexCandidate","previouslyHighlightedIndex","findIndex","option","_options$defaultHighl","newIndex","Math","abs","nextIndex","handleOptionSelection","state","props","multiple","v","selectedValue","optionIndex","indexOf","_ref","_ref2","selectedValues","newSelectedValues","some","sv","filter","highlightedValue","handleKeyDown","event","disableListWrap","disabledItemsFocusable","moveHighlight","direction","key","handleBlur","handleOptionsChange","previousOptions","_options$find","_options$find2","newHighlightedOption","find","_ref3","newSelectedValue","defaultListboxReducer","action","type","keyDown","optionClick","blur","setValue","value","setHighlight","highlight","optionsChange"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ActionTypes } from './useListbox.types';\nconst pageSize = 5;\n\nfunction findValidOptionToHighlight(index, lookupDirection, options, focusDisabled, isOptionDisabled, wrapAround) {\n  if (options.length === 0 || options.every((o, i) => isOptionDisabled(o, i))) {\n    return -1;\n  }\n\n  let nextFocus = index;\n\n  for (;;) {\n    // No valid options found\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === options.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\n      return -1;\n    }\n\n    const nextFocusDisabled = focusDisabled ? false : isOptionDisabled(options[nextFocus], nextFocus);\n\n    if (nextFocusDisabled) {\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\n\n      if (wrapAround) {\n        nextFocus = (nextFocus + options.length) % options.length;\n      }\n    } else {\n      return nextFocus;\n    }\n  }\n}\n\nfunction getNewHighlightedOption(options, previouslyHighlightedOption, diff, lookupDirection, highlightDisabled, isOptionDisabled, wrapAround, optionComparer) {\n  var _options$nextIndex;\n\n  const maxIndex = options.length - 1;\n  const defaultHighlightedIndex = -1;\n  let nextIndexCandidate;\n  const previouslyHighlightedIndex = previouslyHighlightedOption == null ? -1 : options.findIndex(option => optionComparer(option, previouslyHighlightedOption));\n\n  if (diff === 'reset') {\n    var _options$defaultHighl;\n\n    return defaultHighlightedIndex === -1 ? null : (_options$defaultHighl = options[defaultHighlightedIndex]) != null ? _options$defaultHighl : null;\n  }\n\n  if (diff === 'start') {\n    nextIndexCandidate = 0;\n  } else if (diff === 'end') {\n    nextIndexCandidate = maxIndex;\n  } else {\n    const newIndex = previouslyHighlightedIndex + diff;\n\n    if (newIndex < 0) {\n      if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(diff) > 1) {\n        nextIndexCandidate = 0;\n      } else {\n        nextIndexCandidate = maxIndex;\n      }\n    } else if (newIndex > maxIndex) {\n      if (!wrapAround || Math.abs(diff) > 1) {\n        nextIndexCandidate = maxIndex;\n      } else {\n        nextIndexCandidate = 0;\n      }\n    } else {\n      nextIndexCandidate = newIndex;\n    }\n  }\n\n  const nextIndex = findValidOptionToHighlight(nextIndexCandidate, lookupDirection, options, highlightDisabled, isOptionDisabled, wrapAround);\n  return (_options$nextIndex = options[nextIndex]) != null ? _options$nextIndex : null;\n}\n\nfunction handleOptionSelection(option, state, props) {\n  const {\n    multiple,\n    optionComparer = (o, v) => o === v,\n    isOptionDisabled = () => false\n  } = props;\n  const {\n    selectedValue\n  } = state;\n  const optionIndex = props.options.indexOf(option);\n\n  if (isOptionDisabled(option, optionIndex)) {\n    return state;\n  }\n\n  if (multiple) {\n    var _ref, _ref2;\n\n    const selectedValues = (_ref = selectedValue) != null ? _ref : []; // if the option is already selected, remove it from the selection, otherwise add it\n\n    const newSelectedValues = selectedValues.some(sv => optionComparer(sv, option)) ? selectedValue.filter(v => !optionComparer(v, option)) : [...((_ref2 = selectedValue) != null ? _ref2 : []), option];\n    return {\n      selectedValue: newSelectedValues,\n      highlightedValue: option\n    };\n  }\n\n  if (selectedValue != null && optionComparer(option, selectedValue)) {\n    return state;\n  }\n\n  return {\n    selectedValue: option,\n    highlightedValue: option\n  };\n}\n\nfunction handleKeyDown(event, state, props) {\n  const {\n    options,\n    isOptionDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    optionComparer\n  } = props;\n\n  const moveHighlight = (diff, direction, wrapAround) => {\n    return getNewHighlightedOption(options, state.highlightedValue, diff, direction, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, wrapAround, optionComparer);\n  };\n\n  switch (event.key) {\n    case 'Home':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight('start', 'next', false)\n      });\n\n    case 'End':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight('end', 'previous', false)\n      });\n\n    case 'PageUp':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(-pageSize, 'previous', false)\n      });\n\n    case 'PageDown':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(pageSize, 'next', false)\n      });\n\n    case 'ArrowUp':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(-1, 'previous', !(disableListWrap != null ? disableListWrap : false))\n      });\n\n    case 'ArrowDown':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(1, 'next', !(disableListWrap != null ? disableListWrap : false))\n      });\n\n    case 'Enter':\n    case ' ':\n      if (state.highlightedValue === null) {\n        return state;\n      }\n\n      return handleOptionSelection(state.highlightedValue, state, props);\n\n    default:\n      break;\n  }\n\n  return state;\n}\n\nfunction handleBlur(state) {\n  return _extends({}, state, {\n    highlightedValue: null\n  });\n}\n\nfunction handleOptionsChange(options, previousOptions, state, props) {\n  var _options$find, _options$find2;\n\n  const {\n    multiple,\n    optionComparer\n  } = props;\n  const newHighlightedOption = state.highlightedValue == null ? null : (_options$find = options.find(option => optionComparer(option, state.highlightedValue))) != null ? _options$find : null;\n\n  if (multiple) {\n    var _ref3;\n\n    // exclude selected values that are no longer in the options\n    const selectedValues = (_ref3 = state.selectedValue) != null ? _ref3 : [];\n    const newSelectedValues = selectedValues.filter(selectedValue => options.some(option => optionComparer(option, selectedValue)));\n    return {\n      highlightedValue: newHighlightedOption,\n      selectedValue: newSelectedValues\n    };\n  }\n\n  const newSelectedValue = (_options$find2 = options.find(option => optionComparer(option, state.selectedValue))) != null ? _options$find2 : null;\n  return {\n    highlightedValue: newHighlightedOption,\n    selectedValue: newSelectedValue\n  };\n}\n\nexport default function defaultListboxReducer(state, action) {\n  const {\n    type\n  } = action;\n\n  switch (type) {\n    case ActionTypes.keyDown:\n      return handleKeyDown(action.event, state, action.props);\n\n    case ActionTypes.optionClick:\n      return handleOptionSelection(action.option, state, action.props);\n\n    case ActionTypes.blur:\n      return handleBlur(state);\n\n    case ActionTypes.setValue:\n      return _extends({}, state, {\n        selectedValue: action.value\n      });\n\n    case ActionTypes.setHighlight:\n      return _extends({}, state, {\n        highlightedValue: action.highlight\n      });\n\n    case ActionTypes.optionsChange:\n      return handleOptionsChange(action.options, action.previousOptions, state, action.props);\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}