{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useButton } from '../ButtonUnstyled';\nimport { useListbox, defaultListboxReducer, ActionTypes } from '../ListboxUnstyled';\n\nfunction useSelect(props) {\n  const {\n    buttonComponent,\n    buttonRef: buttonRefProp,\n    defaultValue,\n    disabled = false,\n    listboxId,\n    listboxRef: listboxRefProp,\n    multiple = false,\n    onChange,\n    onOpenChange,\n    open = false,\n    options,\n    value: valueProp\n  } = props;\n  const buttonRef = React.useRef(null);\n  const handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  const listboxRef = React.useRef(null);\n  const intermediaryListboxRef = useForkRef(listboxRefProp, listboxRef);\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'SelectUnstyled',\n    state: 'value'\n  }); // prevents closing the listbox on keyUp right after opening it\n\n  const ignoreEnterKeyUp = React.useRef(false); // prevents reopening the listbox when button is clicked\n  // (listbox closes on lost focus, then immediately reopens on click)\n\n  const ignoreClick = React.useRef(false); // Ensure the listbox is focused after opening\n\n  const [listboxFocusRequested, requestListboxFocus] = React.useState(false);\n  const focusListboxIfRequested = React.useCallback(() => {\n    if (listboxFocusRequested && listboxRef.current != null) {\n      listboxRef.current.focus();\n      requestListboxFocus(false);\n    }\n  }, [listboxFocusRequested]);\n\n  const updateListboxRef = listboxElement => {\n    listboxRef.current = listboxElement;\n    focusListboxIfRequested();\n  };\n\n  const handleListboxRef = useForkRef(intermediaryListboxRef, updateListboxRef);\n  React.useEffect(() => {\n    focusListboxIfRequested();\n  }, [focusListboxIfRequested]);\n  React.useEffect(() => {\n    requestListboxFocus(open);\n  }, [open]);\n\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n\n    if (!event.defaultPrevented && open) {\n      ignoreClick.current = true;\n    }\n  };\n\n  const createHandleButtonClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n\n    if (!event.defaultPrevented && !ignoreClick.current) {\n      onOpenChange == null ? void 0 : onOpenChange(!open);\n    }\n\n    ignoreClick.current = false;\n  };\n\n  const createHandleButtonKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === 'Enter') {\n      ignoreEnterKeyUp.current = true;\n    }\n\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      onOpenChange == null ? void 0 : onOpenChange(true);\n    }\n  };\n\n  const createHandleListboxKeyUp = otherHandlers => event => {\n    var _otherHandlers$onKeyU;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const closingKeys = multiple ? ['Escape'] : ['Escape', 'Enter', ' '];\n\n    if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {\n      var _buttonRef$current;\n\n      buttonRef == null ? void 0 : (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n    }\n\n    ignoreEnterKeyUp.current = false;\n  };\n\n  const createHandleListboxItemClick = otherHandlers => event => {\n    var _otherHandlers$onClic2;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (!multiple) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n\n  const createHandleListboxBlur = otherHandlers => event => {\n    var _otherHandlers$blur;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$blur = otherHandlers.blur) == null ? void 0 : _otherHandlers$blur.call(otherHandlers, event);\n\n    if (!event.defaultPrevented) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n\n  const listboxReducer = (state, action) => {\n    const newState = defaultListboxReducer(state, action); // change selection when listbox is closed\n\n    if (action.type === ActionTypes.keyDown && !open && (action.event.key === 'ArrowUp' || action.event.key === 'ArrowDown')) {\n      return _extends({}, newState, {\n        selectedValue: newState.highlightedValue\n      });\n    }\n\n    if (action.type === ActionTypes.blur || action.type === ActionTypes.setValue || action.type === ActionTypes.optionsChange) {\n      return _extends({}, newState, {\n        highlightedValue: newState.selectedValue\n      });\n    }\n\n    return newState;\n  };\n\n  const {\n    getRootProps: getButtonRootProps,\n    active: buttonActive,\n    focusVisible: buttonFocusVisible\n  } = useButton({\n    component: buttonComponent,\n    disabled,\n    ref: handleButtonRef\n  });\n  const selectedOption = React.useMemo(() => {\n    var _props$options$find;\n\n    return props.multiple ? props.options.filter(o => value.includes(o.value)) : (_props$options$find = props.options.find(o => o.value === value)) != null ? _props$options$find : null;\n  }, [props.multiple, props.options, value]);\n  let useListboxParameters;\n\n  if (props.multiple) {\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled;\n\n        return (_o$disabled = o == null ? void 0 : o.disabled) != null ? _o$disabled : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: true,\n      onChange: newOptions => {\n        setValue(newOptions.map(o => o.value));\n        onChange == null ? void 0 : onChange(newOptions.map(o => o.value));\n      },\n      options,\n      value: selectedOption\n    };\n  } else {\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled2;\n\n        return (_o$disabled2 = o == null ? void 0 : o.disabled) != null ? _o$disabled2 : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: false,\n      onChange: option => {\n        var _option$value, _option$value2;\n\n        setValue((_option$value = option == null ? void 0 : option.value) != null ? _option$value : null);\n        onChange == null ? void 0 : onChange((_option$value2 = option == null ? void 0 : option.value) != null ? _option$value2 : null);\n      },\n      options,\n      stateReducer: listboxReducer,\n      value: selectedOption\n    };\n  }\n\n  const {\n    getRootProps: getListboxRootProps,\n    getOptionProps: getListboxOptionProps,\n    getOptionState,\n    highlightedOption,\n    selectedOption: listboxSelectedOption\n  } = useListbox(useListboxParameters);\n\n  const getButtonProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, getButtonRootProps(_extends({}, otherHandlers, {\n      onClick: createHandleButtonClick(otherHandlers),\n      onMouseDown: createHandleMouseDown(otherHandlers),\n      onKeyDown: createHandleButtonKeyDown(otherHandlers)\n    })), {\n      'aria-expanded': open,\n      'aria-haspopup': 'listbox'\n    });\n  };\n\n  const getListboxProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return getListboxRootProps(_extends({}, otherHandlers, {\n      onBlur: createHandleListboxBlur(otherHandlers),\n      onKeyUp: createHandleListboxKeyUp(otherHandlers)\n    }));\n  };\n\n  const getOptionProps = function (option) {\n    let otherHandlers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return getListboxOptionProps(option, _extends({}, otherHandlers, {\n      onClick: createHandleListboxItemClick(otherHandlers)\n    }));\n  };\n\n  React.useDebugValue({\n    selectedOption: listboxSelectedOption,\n    open,\n    highlightedOption\n  });\n  return {\n    buttonActive,\n    buttonFocusVisible,\n    disabled,\n    getButtonProps,\n    getListboxProps,\n    getOptionProps,\n    getOptionState,\n    open,\n    value\n  };\n}\n\nexport default useSelect;","map":{"version":3,"sources":["/home/rihem/Bureau/amazon-clone/node_modules/@mui/base/SelectUnstyled/useSelect.js"],"names":["_extends","React","unstable_useControlled","useControlled","unstable_useForkRef","useForkRef","useButton","useListbox","defaultListboxReducer","ActionTypes","useSelect","props","buttonComponent","buttonRef","buttonRefProp","defaultValue","disabled","listboxId","listboxRef","listboxRefProp","multiple","onChange","onOpenChange","open","options","value","valueProp","useRef","handleButtonRef","intermediaryListboxRef","setValue","controlled","default","name","state","ignoreEnterKeyUp","ignoreClick","listboxFocusRequested","requestListboxFocus","useState","focusListboxIfRequested","useCallback","current","focus","updateListboxRef","listboxElement","handleListboxRef","useEffect","createHandleMouseDown","otherHandlers","event","_otherHandlers$onMous","onMouseDown","call","defaultPrevented","createHandleButtonClick","_otherHandlers$onClic","onClick","createHandleButtonKeyDown","_otherHandlers$onKeyD","onKeyDown","key","preventDefault","createHandleListboxKeyUp","_otherHandlers$onKeyU","onKeyUp","closingKeys","includes","_buttonRef$current","createHandleListboxItemClick","_otherHandlers$onClic2","createHandleListboxBlur","_otherHandlers$blur","blur","listboxReducer","action","newState","type","keyDown","selectedValue","highlightedValue","optionsChange","getRootProps","getButtonRootProps","active","buttonActive","focusVisible","buttonFocusVisible","component","ref","selectedOption","useMemo","_props$options$find","filter","o","find","useListboxParameters","id","isOptionDisabled","_o$disabled","optionComparer","v","newOptions","map","_o$disabled2","option","_option$value","_option$value2","stateReducer","getListboxRootProps","getOptionProps","getListboxOptionProps","getOptionState","highlightedOption","listboxSelectedOption","getButtonProps","getListboxProps","onBlur","useDebugValue"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useButton } from '../ButtonUnstyled';\nimport { useListbox, defaultListboxReducer, ActionTypes } from '../ListboxUnstyled';\n\nfunction useSelect(props) {\n  const {\n    buttonComponent,\n    buttonRef: buttonRefProp,\n    defaultValue,\n    disabled = false,\n    listboxId,\n    listboxRef: listboxRefProp,\n    multiple = false,\n    onChange,\n    onOpenChange,\n    open = false,\n    options,\n    value: valueProp\n  } = props;\n  const buttonRef = React.useRef(null);\n  const handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  const listboxRef = React.useRef(null);\n  const intermediaryListboxRef = useForkRef(listboxRefProp, listboxRef);\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'SelectUnstyled',\n    state: 'value'\n  }); // prevents closing the listbox on keyUp right after opening it\n\n  const ignoreEnterKeyUp = React.useRef(false); // prevents reopening the listbox when button is clicked\n  // (listbox closes on lost focus, then immediately reopens on click)\n\n  const ignoreClick = React.useRef(false); // Ensure the listbox is focused after opening\n\n  const [listboxFocusRequested, requestListboxFocus] = React.useState(false);\n  const focusListboxIfRequested = React.useCallback(() => {\n    if (listboxFocusRequested && listboxRef.current != null) {\n      listboxRef.current.focus();\n      requestListboxFocus(false);\n    }\n  }, [listboxFocusRequested]);\n\n  const updateListboxRef = listboxElement => {\n    listboxRef.current = listboxElement;\n    focusListboxIfRequested();\n  };\n\n  const handleListboxRef = useForkRef(intermediaryListboxRef, updateListboxRef);\n  React.useEffect(() => {\n    focusListboxIfRequested();\n  }, [focusListboxIfRequested]);\n  React.useEffect(() => {\n    requestListboxFocus(open);\n  }, [open]);\n\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n\n    if (!event.defaultPrevented && open) {\n      ignoreClick.current = true;\n    }\n  };\n\n  const createHandleButtonClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n\n    if (!event.defaultPrevented && !ignoreClick.current) {\n      onOpenChange == null ? void 0 : onOpenChange(!open);\n    }\n\n    ignoreClick.current = false;\n  };\n\n  const createHandleButtonKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === 'Enter') {\n      ignoreEnterKeyUp.current = true;\n    }\n\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      onOpenChange == null ? void 0 : onOpenChange(true);\n    }\n  };\n\n  const createHandleListboxKeyUp = otherHandlers => event => {\n    var _otherHandlers$onKeyU;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const closingKeys = multiple ? ['Escape'] : ['Escape', 'Enter', ' '];\n\n    if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {\n      var _buttonRef$current;\n\n      buttonRef == null ? void 0 : (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n    }\n\n    ignoreEnterKeyUp.current = false;\n  };\n\n  const createHandleListboxItemClick = otherHandlers => event => {\n    var _otherHandlers$onClic2;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (!multiple) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n\n  const createHandleListboxBlur = otherHandlers => event => {\n    var _otherHandlers$blur;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$blur = otherHandlers.blur) == null ? void 0 : _otherHandlers$blur.call(otherHandlers, event);\n\n    if (!event.defaultPrevented) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n\n  const listboxReducer = (state, action) => {\n    const newState = defaultListboxReducer(state, action); // change selection when listbox is closed\n\n    if (action.type === ActionTypes.keyDown && !open && (action.event.key === 'ArrowUp' || action.event.key === 'ArrowDown')) {\n      return _extends({}, newState, {\n        selectedValue: newState.highlightedValue\n      });\n    }\n\n    if (action.type === ActionTypes.blur || action.type === ActionTypes.setValue || action.type === ActionTypes.optionsChange) {\n      return _extends({}, newState, {\n        highlightedValue: newState.selectedValue\n      });\n    }\n\n    return newState;\n  };\n\n  const {\n    getRootProps: getButtonRootProps,\n    active: buttonActive,\n    focusVisible: buttonFocusVisible\n  } = useButton({\n    component: buttonComponent,\n    disabled,\n    ref: handleButtonRef\n  });\n  const selectedOption = React.useMemo(() => {\n    var _props$options$find;\n\n    return props.multiple ? props.options.filter(o => value.includes(o.value)) : (_props$options$find = props.options.find(o => o.value === value)) != null ? _props$options$find : null;\n  }, [props.multiple, props.options, value]);\n  let useListboxParameters;\n\n  if (props.multiple) {\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled;\n\n        return (_o$disabled = o == null ? void 0 : o.disabled) != null ? _o$disabled : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: true,\n      onChange: newOptions => {\n        setValue(newOptions.map(o => o.value));\n        onChange == null ? void 0 : onChange(newOptions.map(o => o.value));\n      },\n      options,\n      value: selectedOption\n    };\n  } else {\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled2;\n\n        return (_o$disabled2 = o == null ? void 0 : o.disabled) != null ? _o$disabled2 : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: false,\n      onChange: option => {\n        var _option$value, _option$value2;\n\n        setValue((_option$value = option == null ? void 0 : option.value) != null ? _option$value : null);\n        onChange == null ? void 0 : onChange((_option$value2 = option == null ? void 0 : option.value) != null ? _option$value2 : null);\n      },\n      options,\n      stateReducer: listboxReducer,\n      value: selectedOption\n    };\n  }\n\n  const {\n    getRootProps: getListboxRootProps,\n    getOptionProps: getListboxOptionProps,\n    getOptionState,\n    highlightedOption,\n    selectedOption: listboxSelectedOption\n  } = useListbox(useListboxParameters);\n\n  const getButtonProps = (otherHandlers = {}) => {\n    return _extends({}, getButtonRootProps(_extends({}, otherHandlers, {\n      onClick: createHandleButtonClick(otherHandlers),\n      onMouseDown: createHandleMouseDown(otherHandlers),\n      onKeyDown: createHandleButtonKeyDown(otherHandlers)\n    })), {\n      'aria-expanded': open,\n      'aria-haspopup': 'listbox'\n    });\n  };\n\n  const getListboxProps = (otherHandlers = {}) => getListboxRootProps(_extends({}, otherHandlers, {\n    onBlur: createHandleListboxBlur(otherHandlers),\n    onKeyUp: createHandleListboxKeyUp(otherHandlers)\n  }));\n\n  const getOptionProps = (option, otherHandlers = {}) => {\n    return getListboxOptionProps(option, _extends({}, otherHandlers, {\n      onClick: createHandleListboxItemClick(otherHandlers)\n    }));\n  };\n\n  React.useDebugValue({\n    selectedOption: listboxSelectedOption,\n    open,\n    highlightedOption\n  });\n  return {\n    buttonActive,\n    buttonFocusVisible,\n    disabled,\n    getButtonProps,\n    getListboxProps,\n    getOptionProps,\n    getOptionState,\n    open,\n    value\n  };\n}\n\nexport default useSelect;"]},"metadata":{},"sourceType":"module"}